"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _OneOfstringnumber = _interopRequireDefault(require("./OneOfstringnumber"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * The Query model module.
 * @module model/Query
 * @version 5.1.1
 */
var Query = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>Query</code>.
   * @alias module:model/Query
   */
  function Query() {
    _classCallCheck(this, Query);

    Query.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(Query, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>Query</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Query} obj Optional instance to populate.
     * @return {module:model/Query} The populated <code>Query</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Query();

        if (data.hasOwnProperty('$eq')) {
          obj['$eq'] = _ApiClient["default"].convertToType(data['$eq'], _OneOfstringnumber["default"]);

          if ('$eq' !== 'eq') {
            Object.defineProperty(obj, 'eq', {
              get: function get() {
                return obj['$eq'];
              }
            });
          }
        }

        if (data.hasOwnProperty('$text')) {
          obj['$text'] = _ApiClient["default"].convertToType(data['$text'], _OneOfstringnumber["default"]);

          if ('$text' !== 'text') {
            Object.defineProperty(obj, 'text', {
              get: function get() {
                return obj['$text'];
              }
            });
          }
        }

        if (data.hasOwnProperty('$in')) {
          obj['$in'] = _ApiClient["default"].convertToType(data['$in'], [_OneOfstringnumber["default"]]);

          if ('$in' !== '_in') {
            Object.defineProperty(obj, '_in', {
              get: function get() {
                return obj['$in'];
              }
            });
          }
        }

        if (data.hasOwnProperty('$gt')) {
          obj['$gt'] = _ApiClient["default"].convertToType(data['$gt'], 'Number');

          if ('$gt' !== 'gt') {
            Object.defineProperty(obj, 'gt', {
              get: function get() {
                return obj['$gt'];
              }
            });
          }
        }

        if (data.hasOwnProperty('$gte')) {
          obj['$gte'] = _ApiClient["default"].convertToType(data['$gte'], 'Number');

          if ('$gte' !== 'gte') {
            Object.defineProperty(obj, 'gte', {
              get: function get() {
                return obj['$gte'];
              }
            });
          }
        }

        if (data.hasOwnProperty('$lt')) {
          obj['$lt'] = _ApiClient["default"].convertToType(data['$lt'], 'Number');

          if ('$lt' !== 'lt') {
            Object.defineProperty(obj, 'lt', {
              get: function get() {
                return obj['$lt'];
              }
            });
          }
        }

        if (data.hasOwnProperty('$lte')) {
          obj['$lte'] = _ApiClient["default"].convertToType(data['$lte'], 'Number');

          if ('$lte' !== 'lte') {
            Object.defineProperty(obj, 'lte', {
              get: function get() {
                return obj['$lte'];
              }
            });
          }
        }

        if (data.hasOwnProperty('$boost')) {
          obj['$boost'] = _ApiClient["default"].convertToType(data['$boost'], 'Number');

          if ('$boost' !== 'boost') {
            Object.defineProperty(obj, 'boost', {
              get: function get() {
                return obj['$boost'];
              }
            });
          }
        }
      }

      return obj;
    }
  }]);

  return Query;
}();
/**
 * @member {module:model/OneOfstringnumber} $eq
 */


Query.prototype['$eq'] = undefined;
/**
 * @member {module:model/OneOfstringnumber} $text
 */

Query.prototype['$text'] = undefined;
/**
 * @member {Array.<module:model/OneOfstringnumber>} $in
 */

Query.prototype['$in'] = undefined;
/**
 * @member {Number} $gt
 */

Query.prototype['$gt'] = undefined;
/**
 * @member {Number} $gte
 */

Query.prototype['$gte'] = undefined;
/**
 * @member {Number} $lt
 */

Query.prototype['$lt'] = undefined;
/**
 * @member {Number} $lte
 */

Query.prototype['$lte'] = undefined;
/**
 * @member {Number} $boost
 */

Query.prototype['$boost'] = undefined;
var _default = Query;
exports["default"] = _default;